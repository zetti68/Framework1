//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: apache_harmony/classlib/modules/luni/src/main/java/java/util/Hashtable.java
//

#ifndef _JavaUtilHashtable_H_
#define _JavaUtilHashtable_H_

@class IOSObjectArray;
@class JavaUtilHashtable_Entry;
@protocol JavaUtilCollection;
@protocol JavaUtilMap_Entry;
@protocol JavaUtilSet;

#import "JreEmulation.h"
#include "java/io/Serializable.h"
#include "java/util/AbstractCollection.h"
#include "java/util/AbstractSet.h"
#include "java/util/Dictionary.h"
#include "java/util/Enumeration.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"
#include "java/util/MapEntry.h"

#define JavaUtilHashtable_serialVersionUID 1421746759512286392LL

@interface JavaUtilHashtable : JavaUtilDictionary < JavaUtilMap, NSCopying, JavaIoSerializable > {
 @public
  jint elementCount_;
  IOSObjectArray *elementData_;
  jint firstSlot_;
  jint lastSlot_;
  jint modCount_;
}

- (instancetype)init;

- (instancetype)initWithInt:(jint)capacity;

- (instancetype)initWithInt:(jint)capacity
                  withFloat:(jfloat)loadFactor;

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)map;

- (void)clear;

- (id)clone;

- (jboolean)containsWithId:(id)value;

- (jboolean)containsKeyWithId:(id)key;

- (jboolean)containsValueWithId:(id)value;

- (id<JavaUtilEnumeration>)elements;

- (id<JavaUtilSet>)entrySet;

- (jboolean)isEqual:(id)object;

- (id)getWithId:(id)key;

- (JavaUtilHashtable_Entry *)getEntryWithId:(id)key;

- (NSUInteger)hash;

- (jboolean)isEmpty;

- (id<JavaUtilEnumeration>)keys;

- (id<JavaUtilSet>)keySet;

- (id)putWithId:(id)key
         withId:(id)value;

- (void)putAllWithJavaUtilMap:(id<JavaUtilMap>)map;

- (void)rehash;

- (id)removeWithId:(id)key;

- (jint)size;

- (NSString *)description;

- (id<JavaUtilCollection>)values;

@end

FOUNDATION_EXPORT BOOL JavaUtilHashtable_initialized;
J2OBJC_STATIC_INIT(JavaUtilHashtable)

J2OBJC_FIELD_SETTER(JavaUtilHashtable, elementData_, IOSObjectArray *)

J2OBJC_STATIC_FIELD_GETTER(JavaUtilHashtable, serialVersionUID, jlong)

FOUNDATION_EXPORT id<JavaUtilEnumeration> JavaUtilHashtable_EMPTY_ENUMERATION_;
J2OBJC_STATIC_FIELD_GETTER(JavaUtilHashtable, EMPTY_ENUMERATION_, id<JavaUtilEnumeration>)

FOUNDATION_EXPORT id<JavaUtilIterator> JavaUtilHashtable_EMPTY_ITERATOR_;
J2OBJC_STATIC_FIELD_GETTER(JavaUtilHashtable, EMPTY_ITERATOR_, id<JavaUtilIterator>)

@interface JavaUtilHashtable_Entry : JavaUtilMapEntry {
 @public
  JavaUtilHashtable_Entry *next_;
  jint hashcode_;
}

- (instancetype)initWithId:(id)theKey
                    withId:(id)theValue;

- (id)clone;

- (id)setValueWithId:(id)object;

- (jint)getKeyHash;

- (jboolean)equalsKeyWithId:(id)aKey
                    withInt:(jint)hash_;

- (NSString *)description;

@end

__attribute__((always_inline)) inline void JavaUtilHashtable_Entry_init() {}

J2OBJC_FIELD_SETTER(JavaUtilHashtable_Entry, next_, JavaUtilHashtable_Entry *)

@interface JavaUtilHashtable_HashIterator : NSObject < JavaUtilIterator > {
 @public
  jint position_, expectedModCount_;
  id<JavaUtilMapEntry_Type> type_;
  JavaUtilHashtable_Entry *lastEntry_;
  jint lastPosition_;
  jboolean canRemove_;
}

- (instancetype)initWithJavaUtilHashtable:(JavaUtilHashtable *)outer$
                withJavaUtilMapEntry_Type:(id<JavaUtilMapEntry_Type>)value;

- (jboolean)hasNext;

- (id)next;

- (void)remove;

@end

__attribute__((always_inline)) inline void JavaUtilHashtable_HashIterator_init() {}

J2OBJC_FIELD_SETTER(JavaUtilHashtable_HashIterator, type_, id<JavaUtilMapEntry_Type>)
J2OBJC_FIELD_SETTER(JavaUtilHashtable_HashIterator, lastEntry_, JavaUtilHashtable_Entry *)

@interface JavaUtilHashtable_HashEnumIterator : JavaUtilHashtable_HashIterator < JavaUtilEnumeration > {
 @public
  jint start_;
  JavaUtilHashtable_Entry *entry__;
}

- (instancetype)initWithJavaUtilHashtable:(JavaUtilHashtable *)outer$
                withJavaUtilMapEntry_Type:(id<JavaUtilMapEntry_Type>)value;

- (instancetype)initWithJavaUtilHashtable:(JavaUtilHashtable *)outer$
                withJavaUtilMapEntry_Type:(id<JavaUtilMapEntry_Type>)value
                              withBoolean:(jboolean)isEnumeration;

- (jboolean)hasMoreElements;

- (jboolean)hasNext;

- (id)next;

- (id)nextElement;

- (void)remove;

@end

__attribute__((always_inline)) inline void JavaUtilHashtable_HashEnumIterator_init() {}

J2OBJC_FIELD_SETTER(JavaUtilHashtable_HashEnumIterator, entry__, JavaUtilHashtable_Entry *)

@interface JavaUtilHashtable_$1 : NSObject < JavaUtilEnumeration > {
}

- (jboolean)hasMoreElements;

- (id)nextElement;

- (instancetype)init;

@end

__attribute__((always_inline)) inline void JavaUtilHashtable_$1_init() {}

@interface JavaUtilHashtable_$2 : NSObject < JavaUtilIterator > {
}

- (jboolean)hasNext;

- (id)next;

- (void)remove;

- (instancetype)init;

@end

__attribute__((always_inline)) inline void JavaUtilHashtable_$2_init() {}

@interface JavaUtilHashtable_$3 : NSObject < JavaUtilMapEntry_Type > {
}

- (id)getWithJavaUtilMapEntry:(JavaUtilMapEntry *)entry_;

- (instancetype)init;

@end

__attribute__((always_inline)) inline void JavaUtilHashtable_$3_init() {}

@interface JavaUtilHashtable_$4 : JavaUtilAbstractSet {
}

- (jint)size;

- (void)clear;

- (jboolean)removeWithId:(id)object;

- (jboolean)containsWithId:(id)object;

- (id<JavaUtilIterator>)iterator;

- (instancetype)initWithJavaUtilHashtable:(JavaUtilHashtable *)outer$;


@end

__attribute__((always_inline)) inline void JavaUtilHashtable_$4_init() {}

@interface JavaUtilHashtable_$4_$1 : NSObject < JavaUtilMapEntry_Type > {
}

- (id<JavaUtilMap_Entry>)getWithJavaUtilMapEntry:(JavaUtilMapEntry *)entry_;

- (instancetype)init;

@end

__attribute__((always_inline)) inline void JavaUtilHashtable_$4_$1_init() {}

@interface JavaUtilHashtable_$5 : NSObject < JavaUtilMapEntry_Type > {
}

- (id)getWithJavaUtilMapEntry:(JavaUtilMapEntry *)entry_;

- (instancetype)init;

@end

__attribute__((always_inline)) inline void JavaUtilHashtable_$5_init() {}

@interface JavaUtilHashtable_$6 : JavaUtilAbstractSet {
}

- (jboolean)containsWithId:(id)object;

- (jint)size;

- (void)clear;

- (jboolean)removeWithId:(id)key;

- (id<JavaUtilIterator>)iterator;

- (instancetype)initWithJavaUtilHashtable:(JavaUtilHashtable *)outer$;


@end

__attribute__((always_inline)) inline void JavaUtilHashtable_$6_init() {}

@interface JavaUtilHashtable_$6_$1 : NSObject < JavaUtilMapEntry_Type > {
}

- (id)getWithJavaUtilMapEntry:(JavaUtilMapEntry *)entry_;

- (instancetype)init;

@end

__attribute__((always_inline)) inline void JavaUtilHashtable_$6_$1_init() {}

@interface JavaUtilHashtable_$7 : JavaUtilAbstractCollection {
}

- (jboolean)containsWithId:(id)object;

- (jint)size;

- (void)clear;

- (id<JavaUtilIterator>)iterator;

- (instancetype)initWithJavaUtilHashtable:(JavaUtilHashtable *)outer$;


@end

__attribute__((always_inline)) inline void JavaUtilHashtable_$7_init() {}

@interface JavaUtilHashtable_$7_$1 : NSObject < JavaUtilMapEntry_Type > {
}

- (id)getWithJavaUtilMapEntry:(JavaUtilMapEntry *)entry_;

- (instancetype)init;

@end

__attribute__((always_inline)) inline void JavaUtilHashtable_$7_$1_init() {}

#endif // _JavaUtilHashtable_H_
