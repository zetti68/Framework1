//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/j2objc-0.9.4/junit/build_result/java/junit/framework/Assert.java
//

#ifndef _JunitFrameworkAssert_H_
#define _JunitFrameworkAssert_H_

#import "JreEmulation.h"

@interface JunitFrameworkAssert : NSObject {
}

- (instancetype)init;

+ (void)assertTrueWithNSString:(NSString *)message
                   withBoolean:(jboolean)condition;

+ (void)assertTrueWithBoolean:(jboolean)condition;

+ (void)assertFalseWithNSString:(NSString *)message
                    withBoolean:(jboolean)condition;

+ (void)assertFalseWithBoolean:(jboolean)condition;

+ (void)failWithNSString:(NSString *)message;

+ (void)fail;

+ (void)assertEqualsWithNSString:(NSString *)message
                          withId:(id)expected
                          withId:(id)actual;

+ (void)assertEqualsWithId:(id)expected
                    withId:(id)actual;

+ (void)assertEqualsWithNSString:(NSString *)message
                    withNSString:(NSString *)expected
                    withNSString:(NSString *)actual;

+ (void)assertEqualsWithNSString:(NSString *)expected
                    withNSString:(NSString *)actual;

+ (void)assertEqualsWithNSString:(NSString *)message
                      withDouble:(jdouble)expected
                      withDouble:(jdouble)actual
                      withDouble:(jdouble)delta;

+ (void)assertEqualsWithDouble:(jdouble)expected
                    withDouble:(jdouble)actual
                    withDouble:(jdouble)delta;

+ (void)assertEqualsWithNSString:(NSString *)message
                       withFloat:(jfloat)expected
                       withFloat:(jfloat)actual
                       withFloat:(jfloat)delta;

+ (void)assertEqualsWithFloat:(jfloat)expected
                    withFloat:(jfloat)actual
                    withFloat:(jfloat)delta;

+ (void)assertEqualsWithNSString:(NSString *)message
                        withLong:(jlong)expected
                        withLong:(jlong)actual;

+ (void)assertEqualsWithLong:(jlong)expected
                    withLong:(jlong)actual;

+ (void)assertEqualsWithNSString:(NSString *)message
                     withBoolean:(jboolean)expected
                     withBoolean:(jboolean)actual;

+ (void)assertEqualsWithBoolean:(jboolean)expected
                    withBoolean:(jboolean)actual;

+ (void)assertEqualsWithNSString:(NSString *)message
                        withByte:(jbyte)expected
                        withByte:(jbyte)actual;

+ (void)assertEqualsWithByte:(jbyte)expected
                    withByte:(jbyte)actual;

+ (void)assertEqualsWithNSString:(NSString *)message
                        withChar:(jchar)expected
                        withChar:(jchar)actual;

+ (void)assertEqualsWithChar:(jchar)expected
                    withChar:(jchar)actual;

+ (void)assertEqualsWithNSString:(NSString *)message
                       withShort:(jshort)expected
                       withShort:(jshort)actual;

+ (void)assertEqualsWithShort:(jshort)expected
                    withShort:(jshort)actual;

+ (void)assertEqualsWithNSString:(NSString *)message
                         withInt:(jint)expected
                         withInt:(jint)actual;

+ (void)assertEqualsWithInt:(jint)expected
                    withInt:(jint)actual;

+ (void)assertNotNullWithId:(id)object;

+ (void)assertNotNullWithNSString:(NSString *)message
                           withId:(id)object;

+ (void)assertNullWithId:(id)object;

+ (void)assertNullWithNSString:(NSString *)message
                        withId:(id)object;

+ (void)assertSameWithNSString:(NSString *)message
                        withId:(id)expected
                        withId:(id)actual;

+ (void)assertSameWithId:(id)expected
                  withId:(id)actual;

+ (void)assertNotSameWithNSString:(NSString *)message
                           withId:(id)expected
                           withId:(id)actual;

+ (void)assertNotSameWithId:(id)expected
                     withId:(id)actual;

+ (void)failSameWithNSString:(NSString *)message;

+ (void)failNotSameWithNSString:(NSString *)message
                         withId:(id)expected
                         withId:(id)actual;

+ (void)failNotEqualsWithNSString:(NSString *)message
                           withId:(id)expected
                           withId:(id)actual;

+ (NSString *)formatWithNSString:(NSString *)message
                          withId:(id)expected
                          withId:(id)actual;

@end

__attribute__((always_inline)) inline void JunitFrameworkAssert_init() {}

#endif // _JunitFrameworkAssert_H_
