//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Zetzsche/Development/j2objc-0.9.4/testing/mockito/build_result/java/org/mockito/Matchers.java
//

#ifndef _OrgMockitoMatchers_H_
#define _OrgMockitoMatchers_H_

@class IOSClass;
@class IOSObjectArray;
@class OrgMockitoInternalProgressHandyReturnValues;
@protocol JavaUtilCollection;
@protocol JavaUtilList;
@protocol JavaUtilMap;
@protocol JavaUtilSet;
@protocol OrgHamcrestMatcher;
@protocol OrgMockitoInternalProgressMockingProgress;

#import "JreEmulation.h"

@interface OrgMockitoMatchers : NSObject {
}

+ (jboolean)anyBoolean;

+ (jbyte)anyByte;

+ (jchar)anyChar;

+ (jint)anyInt;

+ (jlong)anyLong;

+ (jfloat)anyFloat;

+ (jdouble)anyDouble;

+ (jshort)anyShort;

+ (id)anyObject;

+ (id)anyVararg;

+ (id)anyWithIOSClass:(IOSClass *)clazz;

+ (id)any;

+ (NSString *)anyString;

+ (id<JavaUtilList>)anyList;

+ (id<JavaUtilList>)anyListOfWithIOSClass:(IOSClass *)clazz;

+ (id<JavaUtilSet>)anySet;

+ (id<JavaUtilSet>)anySetOfWithIOSClass:(IOSClass *)clazz;

+ (id<JavaUtilMap>)anyMap;

+ (id<JavaUtilMap>)anyMapOfWithIOSClass:(IOSClass *)keyClazz
                           withIOSClass:(IOSClass *)valueClazz;

+ (id<JavaUtilCollection>)anyCollection;

+ (id<JavaUtilCollection>)anyCollectionOfWithIOSClass:(IOSClass *)clazz;

+ (id)isAWithIOSClass:(IOSClass *)clazz;

+ (jboolean)eqWithBoolean:(jboolean)value;

+ (jbyte)eqWithByte:(jbyte)value;

+ (jchar)eqWithChar:(jchar)value;

+ (jdouble)eqWithDouble:(jdouble)value;

+ (jfloat)eqWithFloat:(jfloat)value;

+ (jint)eqWithInt:(jint)value;

+ (jlong)eqWithLong:(jlong)value;

+ (jshort)eqWithShort:(jshort)value;

+ (id)eqWithId:(id)value;

+ (id)refEqWithId:(id)value
withNSStringArray:(IOSObjectArray *)excludeFields;

+ (id)sameWithId:(id)value;

+ (id)isNull;

+ (id)isNullWithIOSClass:(IOSClass *)clazz;

+ (id)notNull;

+ (id)notNullWithIOSClass:(IOSClass *)clazz;

+ (id)isNotNull;

+ (id)isNotNullWithIOSClass:(IOSClass *)clazz;

+ (NSString *)containsWithNSString:(NSString *)substring;

+ (NSString *)matchesWithNSString:(NSString *)regex;

+ (NSString *)endsWithWithNSString:(NSString *)suffix;

+ (NSString *)startsWithWithNSString:(NSString *)prefix;

+ (id)argThatWithOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)matcher;

+ (jchar)charThatWithOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)matcher;

+ (jboolean)booleanThatWithOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)matcher;

+ (jbyte)byteThatWithOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)matcher;

+ (jshort)shortThatWithOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)matcher;

+ (jint)intThatWithOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)matcher;

+ (jlong)longThatWithOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)matcher;

+ (jfloat)floatThatWithOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)matcher;

+ (jdouble)doubleThatWithOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)matcher;

+ (OrgMockitoInternalProgressHandyReturnValues *)reportMatcherWithOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)matcher;

- (instancetype)init;

@end

FOUNDATION_EXPORT BOOL OrgMockitoMatchers_initialized;
J2OBJC_STATIC_INIT(OrgMockitoMatchers)

FOUNDATION_EXPORT id<OrgMockitoInternalProgressMockingProgress> OrgMockitoMatchers_mockingProgress_;
J2OBJC_STATIC_FIELD_GETTER(OrgMockitoMatchers, mockingProgress_, id<OrgMockitoInternalProgressMockingProgress>)
J2OBJC_STATIC_FIELD_SETTER(OrgMockitoMatchers, mockingProgress_, id<OrgMockitoInternalProgressMockingProgress>)

#endif // _OrgMockitoMatchers_H_
